buildscript {
    dependencies {
        classpath("com.github.docker-java:docker-java:3.2.13")
        classpath("com.github.docker-java:docker-java-transport-httpclient5:3.2.13")
    }
}

plugins {
    id("com.github.johnrengelman.shadow") version "7.1.2"
    id("io.micronaut.application") version "3.7.7"
}

version = "0.1"
group = "com.gg"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("jakarta.annotation:jakarta.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    implementation("io.micronaut:micronaut-validation")
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.7.1'

    testImplementation 'org.awaitility:awaitility:4.2.0'

    implementation platform('io.projectreactor:reactor-bom:2022.0.6')
    implementation 'io.projectreactor:reactor-core'

}


application {
    mainClass.set("com.gg.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.gg.*")
    }
}

dockerfile {
    if (System.getProperty("os.arch") == "aarch64") {
        baseImage.set("arm64v8/amazoncorretto:17-alpine")
    } else {
        baseImage.set("amazoncorretto:17-alpine")
    }
}
